steps:
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ['install', '-r', 'requirements.txt', '--user']

  # Run unit tests
  - name: python
    entrypoint: python
    args: ['-m', 'pytest', '-s', '--junitxml=${SHORT_SHA}_test_log.xml']
    secretEnv: ['API_KEY_VALUE']

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '--platform=linux/amd64',
        '-t',
        'europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-weather-station:${SHORT_SHA}',
        '.',
      ]

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-weather-station:${SHORT_SHA}',
      ]

  # Deploy to Cloud Run
  - name: google/cloud-sdk
    args:
      [
        'gcloud',
        'run',
        'deploy',
        'mkrolik-weather-station-${SHORT_SHA}',
        '--image=europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-weather-station:${SHORT_SHA}',
        '--region',
        'europe-west1',
        '--platform',
        'managed',
        '--allow-unauthenticated',
        '--memory',
        '128Mi',
        '--cpu',
        '1',
        '--max-instances',
        '3',
        '--port',
        '5001',
        '--set-secrets',
        'API_KEY_VALUE=API_KEY_VALUE:latest,SQLALCHEMY_DATABASE_URI=SQLALCHEMY_DATABASE_URI:latest,DEBUG=DEBUG:latest',
      ]

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/API_KEY_VALUE/versions/latest
      env: 'API_KEY_VALUE'

# Save test logs to Google Cloud Storage
artifacts:
  objects:
    location: gs://${_BUCKET_NAME}/
    paths:
      - ${SHORT_SHA}_test_log.xml
# Store images in Google Artifact Registry
images:
  - europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-weather-station:${SHORT_SHA}
